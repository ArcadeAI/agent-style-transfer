name: Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
          version: "latest"

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            .venv
            .uv_cache
          key: ${{ runner.os }}-uv-${{ hashFiles('**/pyproject.toml', '**/uv.lock') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Install dependencies
        run: |
          uv sync --dev

      - name: Write .env.key from secret
        run: echo "${{ secrets.ENV_KEY }}" > .env.key

      - name: Decrypt test environment
        run: uv run python scripts/env_vault.py decrypt
        continue-on-error: true

      - name: Run linting
        run: |
          uv run black --check .
          uv run isort --check-only .
          uv run flake8 .

      - name: Run type checking
        run: |
          uv run mypy .

      - name: Run tests
        run: |
          uv run pytest tests/ -v
